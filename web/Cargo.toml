[package]
name = "rust-fullstack-template-web"
version = "0.1.0"
authors = ["{{authors}}"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
shared = { package = "rust-fullstack-template-shared", path = "../shared" }
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
lignin-dom = { git = "https://github.com/Tamschi/lignin-dom.git", branch = "develop" }
lignin = "0.0.6"
bumpalo = "3.6.1"
log = "0.4"
console_log = "0.2.0"
js-sys = "0.3.50"
tracing-wasm = "0.2.0"
tracing = "0.1.25"

[dependencies.web-sys]
version = "0.3.6"
features = [
  'Document',
  'Element',
  'HtmlElement',
  'Node',
  'Window',
  'console',
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
